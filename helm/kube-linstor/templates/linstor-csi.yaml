{{- if .Values.csi.enabled }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "linstor.fullname" . }}-csi-attacher-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "linstor.fullname" . }}-csi-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "linstor.fullname" . }}-csi-snapshotter-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "list", "watch", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots/status"]
    verbs: ["update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "linstor.fullname" . }}-csi-attacher-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "linstor.fullname" . }}-csi-attacher-role

subjects:
- kind: ServiceAccount
  name: {{ template "linstor.fullname" . }}-csi-controller-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "linstor.fullname" . }}-csi-driver-registrar-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "linstor.fullname" . }}-csi-driver-registrar-role
subjects:
- kind: ServiceAccount
  name: {{ template "linstor.fullname" . }}-csi-node-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "linstor.fullname" . }}-csi-provisioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "linstor.fullname" . }}-csi-provisioner-role
subjects:
- kind: ServiceAccount
  name: {{ template "linstor.fullname" . }}-csi-controller-sa
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "linstor.fullname" . }}-csi-snapshotter-binding
roleRef:
  kind: ClusterRole
  name: {{ template "linstor.fullname" . }}-csi-snapshotter-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: {{ template "linstor.fullname" . }}-csi-controller-sa
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "linstor.fullname" . }}-csi-controller-sa
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "linstor.fullname" . }}-csi-node-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "linstor.fullname" . }}-csi-driver-registrar-role
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: storage.k8s.io/v1beta1
kind: CSIDriver
metadata:
  name: linstor.csi.linbit.com
spec:
  attachRequired: true
  podInfoOnMount: true
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "linstor.fullname" . }}-csi-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: {{ template "linstor.fullname" . }}-csi-node
      role: linstor-csi
  template:
    metadata:
      labels:
        app: {{ template "linstor.fullname" . }}-csi-node
        role: linstor-csi
    spec:
      containers:
      {{- if .Values.stunnel.enabled }}
      - args:
        - /etc/stunnel/stunnel-client.conf
        image: {{ .Values.stunnel.image.repository }}:{{ .Values.stunnel.image.tag }}
        imagePullPolicy: {{ .Values.stunnel.image.pullPolicy }}
        name: stunnel
        volumeMounts:
        - mountPath: /etc/stunnel
          name: stunnel-config
      {{- end }}
      - args:
        - --v=5
        - --csi-address=$(ADDRESS)
        - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/plugins/linstor.csi.linbit.com/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: {{ .Values.csi.image.csiNodeDriverRegistrar.repository }}:{{ .Values.csi.image.csiNodeDriverRegistrar.tag }}
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -rf /registration/linstor.csi.linbit.com /registration/linstor.csi.linbit.com-reg.sock
        name: csi-node-driver-registrar
        volumeMounts:
        - mountPath: /csi/
          name: plugin-dir
        - mountPath: /registration/
          name: registration-dir
      - args:
        - --csi-endpoint=$(CSI_ENDPOINT)
        - --node=$(KUBE_NODE_NAME)
        - --linstor-endpoint=$(LINSTOR_IP)
        - --log-level=debug
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINSTOR_IP
          {{- if .Values.stunnel.enabled }}
          value: http://localhost:3370
          {{- else }}
          value: http://{{ template "linstor.fullname" . }}-controller.{{ .Release.Namespace }}:{{ .Values.controller.restApiBindPort }}
          {{- end }}
        image: {{ .Values.csi.image.linstorCsiPlugin.repository }}:{{ .Values.csi.image.linstorCsiPlugin.tag }}
        imagePullPolicy: {{ .Values.csi.image.linstorCsiPlugin.pullPolicy }}
        name: linstor-csi-plugin
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: pods-mount-dir
        - mountPath: /dev
          name: device-dir
      imagePullSecrets:
{{ toYaml .Values.csi.image.pullSecrets | indent 8 }}
{{- with . }}
      nodeSelector:
{{ toYaml .Values.csi.node.nodeSelector | indent 8 }}
{{- end }}
{{- with .Values.csi.node.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
{{- end }}
      priorityClassName: system-node-critical
      serviceAccount: {{ template "linstor.fullname" . }}-csi-node-sa
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: DirectoryOrCreate
        name: registration-dir
      - hostPath:
          path: /var/lib/kubelet/plugins/linstor.csi.linbit.com/
          type: DirectoryOrCreate
        name: plugin-dir
      - hostPath:
          path: /var/lib/kubelet
          type: Directory
        name: pods-mount-dir
      - hostPath:
          path: /dev
        name: device-dir
      {{- if .Values.stunnel.enabled }}
      - name: stunnel-config
        projected:
          sources:
          - configMap:
              name: linstor-stunnel
          - secret:
              name: linstor-stunnel
      {{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "linstor.fullname" . }}-csi-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "linstor.fullname" . }}-csi-controller
      role: linstor-csi
  serviceName: linstor-csi
  template:
    metadata:
      labels:
        app: {{ template "linstor.fullname" . }}-csi-controller
        role: linstor-csi
    spec:
      containers:
      {{- if .Values.stunnel.enabled }}
      - args:
        - /etc/stunnel/stunnel-client.conf
        image: {{ .Values.stunnel.image.repository }}:{{ .Values.stunnel.image.tag }}
        imagePullPolicy: {{ .Values.stunnel.image.pullPolicy }}
        name: stunnel
        volumeMounts:
        - mountPath: /etc/stunnel
          name: stunnel-config
      {{- end }}
      - args:
        - --csi-address=$(ADDRESS)
        - --v=5
        - --feature-gates=Topology=true
        - --timeout=120s
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: {{ .Values.csi.image.csiProvisioner.repository }}:{{ .Values.csi.image.csiProvisioner.tag }}
        imagePullPolicy: {{ .Values.csi.image.csiProvisioner.pullPolicy }}
        name: csi-provisioner
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --v=5
        - --csi-address=$(ADDRESS)
        - --timeout=120s
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: {{ .Values.csi.image.csiAttacher.repository }}:{{ .Values.csi.image.csiAttacher.tag }}
        imagePullPolicy: {{ .Values.csi.image.csiAttacher.pullPolicy }}
        name: csi-attacher
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --timeout=120s
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: {{ .Values.csi.image.csiSnapshotter.repository }}:{{ .Values.csi.image.csiSnapshotter.tag }}
        imagePullPolicy: {{ .Values.csi.image.csiSnapshotter.pullPolicy }}
        name: csi-snapshotter
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-endpoint=$(CSI_ENDPOINT)
        - --node=$(KUBE_NODE_NAME)
        - --linstor-endpoint=$(LINSTOR_IP)
        - --log-level=debug
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINSTOR_IP
          {{- if .Values.stunnel.enabled }}
          value: http://localhost:3370
          {{- else }}
          value: http://{{ template "linstor.fullname" . }}-controller.{{ .Release.Namespace }}:{{ .Values.controller.restApiBindPort }}
          {{- end }}
        image: {{ .Values.csi.image.linstorCsiPlugin.repository }}:{{ .Values.csi.image.linstorCsiPlugin.tag }}
        imagePullPolicy: {{ .Values.csi.image.linstorCsiPlugin.pullPolicy }}
        name: linstor-csi-plugin
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      imagePullSecrets:
{{ toYaml .Values.csi.image.pullSecrets | indent 8 }}
{{- with .Values.csi.controller.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.csi.controller.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
{{- end }}
      priorityClassName: system-cluster-critical
      serviceAccount: {{ template "linstor.fullname" . }}-csi-controller-sa
      volumes:
      - emptyDir: {}
        name: socket-dir
      {{- if .Values.stunnel.enabled }}
      - name: stunnel-config
        projected:
          sources:
          - configMap:
              name: linstor-stunnel
          - secret:
              name: linstor-stunnel
      {{- end }}
{{- end }}
